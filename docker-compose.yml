version: '3.8'

services:

  sms: # service name
    build: .
    command: python app.py
# map data and files from parent directory in host to microservice directory in docker container
    volumes:
      - .:/sms_ms
    ports:
      - 50051:50051
    env_file:
      - .env_demo # name of the env file
    image: sms_ms
    restart: "on-failure"

    depends_on:
      - redis
      - rabbitmq


  rabbitmq:
    image: rabbitmq:3.12
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - "rabbitmq_data:/data"
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:7.0.11-alpine
    ports:
    - "6379:6379"
    volumes:
      - redis_data:/data
    restart: "on-failure"


  worker:
    build: .
    hostname: worker
    entrypoint: celery
    command: -A sender.queue.celery_app:celery_app worker --loglevel=info
    volumes:
      - ./sender:/sms_ms
    env_file:
      - .env_demo
    links:
      - redis
    depends_on:
      - rabbitmq
      - redis
    restart: "on-failure"

  delivery_api:
    build: .
    hostname: fastapi
    command: uvicorn sender.callback.cbapp:app --host 127.0.0.1 --port 8000
    ports:
      - 8000:8000
    volumes:
      - ./sender:/sms_ms
    env_file:
      - .env_demo
    links:
      - redis
    depends_on:
      - redis
    restart: "on-failure"

volumes:
  redis_data:
  rabbitmq_data: